import React, { useEffect, useState, useContext, useRef } from "react";
import { Link } from "react-router-dom";
// import { Dropdown, Ripple, initTE } from "tw-elements";
import { BsFillPersonFill, BsPower } from "react-icons/bs";
import { AiFillSetting } from "react-icons/ai";
import { MdSupportAgent } from "react-icons/md";
import AddCandidate from "./AddCandidate";
import { AuthContext } from "../../redux/context/AuthContext";

const Navbar= () => {
  const [dropdownFlag, setDropdownFlag] = useState(false);
  const dropdownRef = useRef(null);
  const { user ,dispatch} = useContext(AuthContext);


//   useEffect(() => {
//     initTE({ Dropdown, Ripple });
//   }, []);

  useEffect(() => {
    // console.log(dropdownFlag)
    const popup = document.getElementById("dropDownList");
    if (popup) {
      popup.classList.remove("hidden");
      popup.style.animationName = "popupAnimation";
      popup.style.animationDuration = "0.5s";
      popup.classList.add("animate-popupAnimation");
    }
  }, [dropdownFlag]);

  const handleLogout = () => {
    dispatch({ type: "LOG_OUT" });
    localStorage.removeItem("ttfive_user");
  };

  //close dropdown onclick over anywhere on scr
  useEffect(() => {
    const handleClickOutside = (event) => {
      if (
        dropdownRef.current &&
        !dropdownRef.current.contains(event.target ) &&
        !(event.target).closest("#profile-settings")
      ) {
        setDropdownFlag(false);
      }
    };
    document.addEventListener("click", handleClickOutside);
    return () => {
      document.removeEventListener("click", handleClickOutside);
    };
  }, []);

  return (
    <nav className="bg-white  border-[1px] w-screen h-[10vh] sticky top-0 z-50">
      <div className=" flex flex-wrap items-center justify-between px-4 h-full">
        <Link to={"/"} className="flex items-center justify-start h-full">
          {/* <img
            className="h-6 mr-1"
            src="https://th.bing.com/th?id=OIP.mvzumO18d4Syeg31wW8yRQHaFj&w=288&h=216&c=8&rs=1&qlt=90&o=6&dpr=1.7&pid=3.1&rm=2"
          /> */}
          
          <img src="https://th.bing.com/th?id=OIP.mvzumO18d4Syeg31wW8yRQHaFj&w=288&h=216&c=8&rs=1&qlt=90&o=6&dpr=1.7&pid=3.1&rm=2"  className="self-center h-14 hidden sm:block font-semibold whitespace-nowrap dark:text-white" />
        </Link>
        
        <div className="text-xl font-semibold">  {user.role === "hr" ? "HR" : "Manager"} Dashboard </div>
        <div className=" flex">
          {/* <AddCandidate /> */}
          <div id="profile-settings" className="flex items-center md:order-2">
            <div
              className="relative inline-flex items-center justify-center w-10 h-10 overflow-hidden bg-gray-100 rounded-full dark:bg-gray-600 cursor-pointer"
              data-te-ripple-init
              data-te-ripple-color="light"
              onClick={() => setDropdownFlag(!dropdownFlag)}>
              <span className="font-medium text-gray-600 dark:text-gray-300">
                {user.name.substring(0, 1).toUpperCase()}
              </span>
            </div>
            {dropdownFlag && (
              <ul
                ref={dropdownRef}
                id="dropDownList"
                className="absolute z-[100] hidden animate-popupAnimation transition-opacity duration-300 float-left m-0 w-[14rem] list-none overflow-hidden rounded-md border-gray-300 border-[1px] bg-white bg-clip-padding text-left text-base shadow-2xl top-[3.5rem] right-[1rem]"
                aria-labelledby="dropdownMenuButton1"
                data-te-dropdown-menu-ref>
                <div className="text-heading block w-full whitespace-nowrap bg-transparent px-4 py-2 text-neutral-700">{user.name}</div>
                <li className="block w-full whitespace-nowrap bg-transparent px-4 py-2 text-sm font-normal text-neutral-700 hover:bg-neutral-100 active:text-neutral-800 active:no-underline disabled:pointer-events-none disabled:bg-transparent disabled:text-neutral-400 dark:text-neutral-800 dark:hover:bg-neutral-200 cursor-pointer">
                  <div
                    className="flex items-center justify-start"
                    onClick={handleLogout}
                  >
                    <BsPower className="text-xl opacity-50 mr-2" />
                    <div className="">Log out</div>
                  </div>
                </li>
                {/* <li className="block w-full whitespace-nowrap bg-transparent px-4 py-2 text-sm font-normal text-neutral-700 hover:bg-neutral-100 active:text-neutral-800 active:no-underline disabled:pointer-events-none disabled:bg-transparent disabled:text-neutral-400 dark:text-neutral-800 dark:hover:bg-neutral-200 cursor-pointer">
                  <div
                    className="flex items-center justify-start"
                    onClick={handleLogout}
                  >
                    <BsFillPersonFill className="text-xl opacity-50 mr-2" />
                    <div className="">Profile</div>
                  </div>
                </li>
                <li className="block w-full whitespace-nowrap bg-transparent px-4 py-2 text-sm font-normal text-neutral-700 hover:bg-neutral-100 active:text-neutral-800 active:no-underline disabled:pointer-events-none disabled:bg-transparent disabled:text-neutral-400 dark:text-neutral-800 dark:hover:bg-neutral-200 cursor-pointer">
                  <div
                    className="flex items-center justify-start"
                    onClick={handleLogout}
                  >
                    <AiFillSetting className="text-xl opacity-50 mr-2" />
                    <div className="">Setting</div>
                  </div>
                </li>
                <li className="block w-full whitespace-nowrap bg-transparent px-4 py-2 text-sm font-normal text-neutral-700 hover:bg-neutral-100 active:text-neutral-800 active:no-underline disabled:pointer-events-none disabled:bg-transparent disabled:text-neutral-400 dark:text-neutral-800 dark:hover:bg-neutral-200 cursor-pointer">
                  <div
                    className="flex items-center justify-start"
                    onClick={handleLogout}
                  >
                    <MdSupportAgent className="text-xl opacity-50 mr-2" />
                    <div className="">Support</div>
                  </div>
                </li> */}
              </ul>
            )}
          </div>
        </div>
      </div>
    </nav>
  );
};

export default Navbar;


import React, { useContext, useEffect, useRef, useState } from "react";
import { FaChevronDown } from "react-icons/fa";
import { BiAddToQueue } from "react-icons/bi";
import { HiOutlineMail } from "react-icons/hi";
import { Link } from "react-router-dom";
import { AuthContext } from "../../redux/context/AuthContext";

const AddCandidate = () => {
  const [dropdownFlag, setDropdownFlag] = useState(false);
  const [showPopup, setShowPopup] = useState(false);
  const dropdownRef = useRef(null);
  const [recruitmentDetails, setRecruitmentDetails] = useState("");

  const { user } = useContext(AuthContext);

  useEffect(() => {
    // console.log(dropdownFlag)
    const popup = document.getElementById("dropDownList");
    if (popup) {
      popup.classList.remove("hidden");
      popup.style.animationName = "popupAnimation";
      popup.style.animationDuration = "0.5s";
      popup.classList.add("animate-popupAnimation");
    }
  }, [dropdownFlag]);

  const handlePopupClose = () => {
    setShowPopup(false);
  };

  const sendRecruitDetails = async () => {
    console.log("email sent ", recruitmentDetails);
   

    
    setShowPopup(false);
  };

  const handleRecruitmentDetails = (event) => {
    setRecruitmentDetails(event.target.value);
  };

  //close dropdown onclick over anywhere on scr
  useEffect(() => {
    const handleClickOutside = (event) => {
      if (
        dropdownRef.current &&
        !dropdownRef.current.contains(event.target ) &&
        !(event.target ).closest("#new-study")
      ) {
        setDropdownFlag(false);
      }
    };
    document.addEventListener("click", handleClickOutside);
    return () => {
      document.removeEventListener("click", handleClickOutside);
    };
  }, []);

  return (
    <>
      <div id="new-study" className="flex">
        <div className="flex items-center mr-3 md:order-2">
          <div
            className="btn-primary btn-sm flex items-center cursor-pointer"
            onClick={() => setDropdownFlag(!dropdownFlag)}>
            <div className="">Add Candidate Study</div>
            <div className="">
              <FaChevronDown
                className={`${
                  dropdownFlag ? "transform rotate-180" : ""
                } ml-2 transition-transform duration-300 ease-in-out text-white-500`}
              />
            </div>
          </div>
          {dropdownFlag && (
            <ul
              ref={dropdownRef}
              id="dropDownList"
              className="absolute z-[100] hidden animate-popupAnimation transition-opacity duration-300  m-0 min-w-max list-none overflow-hidden rounded-lg border-none bg-white bg-clip-padding text-left text-base shadow-lg top-[3.5rem] right-[4rem]"
              aria-labelledby="dropdownMenuButton1">
              <li onClick={() => setDropdownFlag(!dropdownFlag)}>
                <Link
                  to={"/create"}
                  className="block w-full whitespace-nowrap bg-transparent px-4 py-2 text-sm font-normal text-neutral-700 hover:bg-neutral-100 active:text-neutral-800 active:no-underline disabled:pointer-events-none disabled:bg-transparent disabled:text-neutral-400 dark:text-neutral-200 dark:hover:bg-neutral-600"
                >
                  {" "}
                  <div className="flex items-center">
                    <BiAddToQueue className="mr-2 text-xl" />
                    Create a new Project
                  </div>
                </Link>
              </li>
              <li
                onClick={() => {
                  setDropdownFlag(!dropdownFlag);
                  setShowPopup(true);
                }}
              >
                <Link
                  to={"/"}
                  className="flex items-center w-full whitespace-nowrap bg-transparent cursor-pointer px-4 py-2 text-sm font-normal text-neutral-700 hover:bg-neutral-100 active:text-neutral-800 active:no-underline disabled:pointer-events-none disabled:bg-transparent disabled:text-neutral-400 dark:text-neutral-200 dark:hover:bg-neutral-600"
                >
                  <HiOutlineMail className="mr-2 text-xl" />
                  Send us a recruitment brief
                </Link>
              </li>
            </ul>
          )}
        </div>
      </div>
      {/* Pop for filling recruitment details  */}
      {showPopup && (
        <div className="fixed top-0 left-0 h-screen w-screen flex items-center justify-center z-20">
          <div className="absolute h-full w-full bg-gray-900 opacity-70 z-30"></div>
          <div className="bg-white w-[60%] min-w-[20rem] h-auto rounded-lg shadow-lg z-50">
            <div className="bg-gray-200 text-gray-700 py-4 px-6 rounded-t-lg">
              <p className="text-lg font-bold">
                Form to send recruitment brief
              </p>
            </div>
            <div className="bg-white p-6 rounded-b-lg">
              <p className="mb-2">
                You can can write your recruitment details and our team will
                reachout to you.
              </p>
              <textarea
                className="w-full h-32 border border-gray-300 rounded-lg p-2"
                placeholder="I want 10 particpants for my upcoming educational interview"
                onChange={handleRecruitmentDetails}
              />
              <div className="flex justify-end">
                <button
                  className="btn-base btn-secondary mt-4"
                  onClick={handlePopupClose}
                >
                  Cancel
                </button>
                <button
                  className="btn-base btn-primary mt-4 ml-4"
                  onClick={sendRecruitDetails}
                >
                  Send
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
    </>
  );
};

export default AddCandidate;
