package com.adp.eletter.dto;

import com.adp.eletter.entitiy.Candidate.OfferLetterStatus;

import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

@NoArgsConstructor
@AllArgsConstructor
@Getter
@Setter
@ToString
@Builder
public class CandidateDTO {
	private Long candidateId;
	private String firstName;
	private String lastName;
	private String email;
	private Long pay;
	private String jobId;
	private String gender;
	private String joiningDate;
	private Long mobile;
	private String assignedHRId;
	private String remarksByHR;
	private String remarksByManager;
	@Enumerated(EnumType.STRING)
	private OfferLetterStatus offerLetterStatus;
	private String selectedTemplateId;
	private String generatedLetterDestination;
}


package com.adp.eletter.dto;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

import java.time.LocalDate;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import com.adp.eletter.dto.CandidateDTO;

public class CandidateDTOTest {

	private CandidateDTO candidateDto;
	@BeforeEach
	void setUp() throws Exception {
		candidateDto= new CandidateDTO(12l,"panda","barenya","panda@gmail.com",1000000l,"ADP01","Male",9390999755l,"3gds","wad",com.adp.eletter.entitiy.Candidate.OfferLetterStatus.GENERATED,"12gnfc","yes");
	}


	@AfterEach
	void tearDown() throws Exception {
		candidateDto = null;
	}

	@Test
	void testAllArgConstructor() {
		assertNotNull(candidateDto);
	}


	@Test
	void testDefaultConstructor() {
		CandidateDTO candidateDto = new CandidateDTO();
		assertNotNull(candidateDto);
	}
	
	@Test
	void testGetters() {
		assertEquals("panda",candidateDto.getFirstName());
		assertEquals(12,candidateDto.getCandidateId());
		assertEquals("3gds", candidateDto.getAssignedHRId());
		assertEquals("panda@gmail.com",candidateDto.getEmail());
		assertEquals("Male",candidateDto.getGender());
		assertEquals("ADP01", candidateDto.getJobId());
		assertEquals("barenya", candidateDto.getLastName());
		assertEquals(9390999755l, candidateDto.getMobile());
		assertEquals(1000000l, candidateDto.getPay());
		assertEquals("wad", candidateDto.getManagerId());
		
	}

	@Test
	void testSetters() {
		candidateDto.setFirstName("sai");
		candidateDto.setCandidateId(3333l);
		candidateDto.setAssignedHRId("sda");
		candidateDto.setEmail("panda@adp.com");
		candidateDto.setGender("Female");
		candidateDto.setGeneratedOfferLetter("GENERATED");
		candidateDto.setJobId("sea");
		candidateDto.setLastName("charan");
		candidateDto.setMobile(9949591936l);
		candidateDto.setPay(300000l);
		candidateDto.setManagerId("man02");

		assertEquals("sai",candidateDto.getFirstName());
		assertEquals(3333,candidateDto.getCandidateId());
		assertEquals("sda", candidateDto.getAssignedHRId());
		assertEquals("panda@adp.com",candidateDto.getEmail());
		assertEquals("Female",candidateDto.getGender());
		assertEquals("GENERATED", candidateDto.getGeneratedOfferLetter());
		assertEquals("sea", candidateDto.getJobId());
		assertEquals("charan", candidateDto.getLastName());
		assertEquals(9949591936l, candidateDto.getMobile());
		assertEquals(300000l, candidateDto.getPay());
		assertEquals("man02", candidateDto.getManagerId());
	}

	
	
	
	
	@Test
	void testToString() {
		
	
		candidateDto.setFirstName("sai");
		candidateDto.setCandidateId(3333l);
		candidateDto.setAssignedHRId("sda");
		candidateDto.setEmail("panda@adp.com");
		candidateDto.setGender("Female");
		candidateDto.setGeneratedOfferLetter("GENERATED");
		candidateDto.setJobId("sea");
		candidateDto.setLastName("charan");
		candidateDto.setMobile(9949591936l);
		candidateDto.setPay(300000l);
		candidateDto.setManagerId("man02");
		
		String toTest="CandidateDTO(candidateId=3333, firstName=sai, lastName=charan, email=panda@adp.com, pay=300000, jobId=sea, gender=Female, mobile=9949591936, assignedHRId=sda, managerId=man02, offerLetterStatus=GENERATED, selectedTemplateId=12gnfc, generatedOfferLetter=GENERATED)";
		assertEquals(toTest, candidateDto.toString());
		
	}

}
