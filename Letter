package com.adp.eletter.api;

import static org.mockito.Mockito.*;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;

import java.util.Arrays;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;

import com.adp.eletter.dto.CandidateDTO;
import com.adp.eletter.service.CandidateService;

@WebMvcTest(CandidateController.class)
public class CandidateControllerTest {

    @MockBean
    private CandidateService candidateService;

    @InjectMocks
    private CandidateController candidateController;

    private MockMvc mockMvc;

    @BeforeEach
    public void setup() {
        mockMvc = MockMvcBuilders.standaloneSetup(candidateController).build();
    }

    @Test
    public void testGetAllCandidate() throws Exception {
        when(candidateService.getAllCandidates()).thenReturn(Arrays.asList(new CandidateDTO()));

        mockMvc.perform(get("/api/candidate/all"))
               .andExpect(status().isOk())
               .andExpect(content().contentType(MediaType.APPLICATION_JSON));

        verify(candidateService).getAllCandidates();
    }
    
    // Similarly, you can add tests for other endpoints...
}



<dependency>
    <groupId>org.junit.jupiter</groupId>
    <artifactId>junit-jupiter-api</artifactId>
    <version>5.7.0</version>
    <scope>test</scope>
</dependency>
<dependency>
    <groupId>org.junit.jupiter</groupId>
    <artifactId>junit-jupiter-engine</artifactId>
    <version>5.7.0</version>
    <scope>test</scope>
</dependency>



package com.adp.eletter.dto;

import static org.junit.jupiter.api.Assertions.assertEquals;

import org.junit.jupiter.api.Test;

public class CandidateDTOTest {

    @Test
    public void testCandidateDTO() {
        CandidateDTO candidateDTO = new CandidateDTO();
        
        // Setting properties
        candidateDTO.setCandidateId(1L);
        candidateDTO.setFirstName("John");
        candidateDTO.setLastName("Doe");
        candidateDTO.setEmail("john.doe@example.com");
        
        // more setters...

        // Assertions to verify getters
        assertEquals(1L, candidateDTO.getCandidateId());
        assertEquals("John", candidateDTO.getFirstName());
        assertEquals("Doe", candidateDTO.getLastName());
        assertEquals("john.doe@example.com", candidateDTO.getEmail());
        
        // more assertions...
    }

    @Test
    public void testBuilderPattern() {
        CandidateDTO candidateDTO = CandidateDTO.builder()
                                               .candidateId(1L)
                                               .firstName("John")
                                               .lastName("Doe")
                                               // ... other fields ...
                                               .build();

        assertEquals(1L, candidateDTO.getCandidateId());
        assertEquals("John", candidateDTO.getFirstName());
        // ... other assertions ...
    }
}
