@Test
    public void whenUpdateOfferLetterStatus_thenStatusShouldBeUpdated() throws CandidateException {
        Long id = 12L; // For instance, we're using the ID of the candidate1
        OfferLetterStatus newStatus = OfferLetterStatus.APPROVED;

        Candidate updatedCandidate = new Candidate(candidate1);  // Clone candidate1 or you can manually create an updated version.
        updatedCandidate.setOfferLetterStatus(newStatus);  // Update the status of this cloned/updated candidate.

        Mockito.when(candidateRepository.findById(id)).thenReturn(Optional.of(candidate1));  // Initially it returns the non-updated version.
        Mockito.when(candidateRepository.save(Mockito.any(Candidate.class))).thenReturn(updatedCandidate);  // When we save, it should return the updated candidate.

        CandidateDTO result = candidateServiceImpl.updateOfferLetterStatus(id, newStatus);

        assertThat(result.getOfferLetterStatus()).isEqualTo(newStatus);  // Check if the status in the DTO is updated.

        verify(candidateRepository, times(1)).findById(id);  // Ensure findById is called once.
        verify(candidateRepository, times(1)).save(Mockito.any(Candidate.class));  // Ensure save is called once.
    }
