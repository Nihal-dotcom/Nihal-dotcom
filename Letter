package com.adp.eletter.entitiy;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;


@NoArgsConstructor
@AllArgsConstructor
@Getter
@Setter
@ToString
@Entity
@Table(name = "batch2_ttfive_candidate")
public class Candidate {
	@Id
	@Column(name = "candidate_Id")
	private Long candidateId;
	
	@Column(name = "first_Name")
	private String firstName;
	
	@Column(name = "last_Name")
	private String lastName;
	
	@Column(name = "email")
	private String email;
	
	@Column(name = "pay")
	private Long pay;
	
	@Column(name = "job_Id")
	private String jobId;
	
	@Column(name = "gender")
	private String gender;
	
	@Column(name = "mobile")
	private Long mobile;
	
	@Column(name = "joining_Date")
	private String joiningDate;
	
	@Column(name = "assignedHRId")
	private String assignedHRId;
	
	@Enumerated(EnumType.STRING)
	@Column(name = "offerLetterStatus")
	private OfferLetterStatus offerLetterStatus;
	
	@Column(name = "selected_Template_Id")
	private String selectedTemplateId;
	
	@Column(name = "generated_Letter_Destination")
	private String generatedLetterDestination;
	
	@Column(name = "remarks_By_HR")
	private String remarksByHR;
	
	@Column(name = "remarks_By_Manager")
	private String remarksByManager;

	public OfferLetterStatus getOfferLetterStatus() {
		return offerLetterStatus;
	}

	public void setOfferLetterStatus(OfferLetterStatus offerLetterStatus) {
		this.offerLetterStatus = offerLetterStatus;
	}

	public enum OfferLetterStatus {
			GENERATED,
			PENDING,
			APPROVED,
			REJECTED,
			SENTEMAIL
	}
}


package com.adp.eletter.entity;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

import java.time.LocalDate;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import com.adp.eletter.entitiy.Candidate;
import com.adp.eletter.entitiy.Candidate.OfferLetterStatus;

public class CandidateTest {

	private Candidate candidate;
	@BeforeEach
	void setUp() throws Exception {
		candidate= new Candidate(12l,"panda","barenya","panda@gmail.com",1000000l,"ADP01","Male",9390999755l,"3gds","wad",OfferLetterStatus.GENERATED,"12gnfc","yes");
	}


	@AfterEach
	void tearDown() throws Exception {
		candidate = null;
	}

	@Test
	void testAllArgConstructor() {
		assertNotNull(candidate);
	}


	@Test
	void testDefaultConstructor() {
		Candidate candidate = new Candidate();
		assertNotNull(candidate);
	}
	
	@Test
	void testGetters() {
		assertEquals("panda",candidate.getFirstName());
		assertEquals(12,candidate.getCandidateId());
		assertEquals("3gds", candidate.getAssignedHRId());
		assertEquals("panda@gmail.com",candidate.getEmail());
		assertEquals("Male",candidate.getGender());
		assertEquals("ADP01", candidate.getJobId());
		assertEquals("barenya", candidate.getLastName());
		assertEquals(9390999755l, candidate.getMobile());
		assertEquals(1000000l, candidate.getPay());
		assertEquals("wad", candidate.getManagerId());
		
	}

	@Test
	void testSetters() {
		candidate.setFirstName("sai");
		candidate.setCandidateId(3333l);
		candidate.setAssignedHRId("sda");
		candidate.setEmail("panda@adp.com");
		candidate.setGender("Female");
		candidate.setGeneratedOfferLetter("GENERATED");
		candidate.setJobId("sea");
		candidate.setLastName("charan");
		candidate.setMobile(9949591936l);
		candidate.setPay(300000l);
		candidate.setManagerId("man02");

		assertEquals("sai",candidate.getFirstName());
		assertEquals(3333,candidate.getCandidateId());
		assertEquals("sda", candidate.getAssignedHRId());
		assertEquals("panda@adp.com",candidate.getEmail());
		assertEquals("Female",candidate.getGender());
		assertEquals("GENERATED", candidate.getGeneratedOfferLetter());
		assertEquals("sea", candidate.getJobId());
		assertEquals("charan", candidate.getLastName());
		assertEquals(9949591936l, candidate.getMobile());
		assertEquals(300000l, candidate.getPay());
		assertEquals("man02", candidate.getManagerId());
	}

	
	
	
	
	@Test
	void testToString() {
		
	
		candidate.setFirstName("sai");
		candidate.setCandidateId(3333l);
		candidate.setAssignedHRId("sda");
		candidate.setEmail("panda@adp.com");
		candidate.setGender("Female");
		candidate.setGeneratedOfferLetter("GENERATED");
		candidate.setJobId("sea");
		candidate.setLastName("charan");
		candidate.setMobile(9949591936l);
		candidate.setPay(300000l);
		candidate.setManagerId("man02");
		
		String toTest="Candidate(candidateId=3333, firstName=sai, lastName=charan, email=panda@adp.com, pay=300000, jobId=sea, gender=Female, mobile=9949591936, assignedHRId=sda, managerId=man02, offerLetterStatus=GENERATED, selectedTemplateId=12gnfc, generatedOfferLetter=GENERATED)";
		assertEquals(toTest, candidate.toString());
		
	}

}
