package com.adp.eletter.entity;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import com.adp.eletter.entitiy.Candidate;
import com.adp.eletter.entitiy.Candidate.OfferLetterStatus;

public class CandidateTest {

	private Candidate candidate;

	@BeforeEach
	void setUp() throws Exception {
		candidate = new Candidate(
			12l,
			"panda",
			"barenya",
			"panda@gmail.com",
			1000000l,
			"ADP01",
			"Male",
			9390999755l,
			"2023-09-25",
			"3gds",
			OfferLetterStatus.GENERATED,
			"12gnfc",
			"some/path/to/letter",
			"Remark by HR",
			"Remark by Manager"
		);
	}

	@AfterEach
	void tearDown() throws Exception {
		candidate = null;
	}

	@Test
	void testAllArgConstructor() {
		assertNotNull(candidate);
	}

	@Test
	void testDefaultConstructor() {
		Candidate candidate = new Candidate();
		assertNotNull(candidate);
	}

	@Test
	void testGetters() {
		assertEquals("panda", candidate.getFirstName());
		assertEquals(12l, candidate.getCandidateId());
		assertEquals("3gds", candidate.getAssignedHRId());
		assertEquals("panda@gmail.com", candidate.getEmail());
		assertEquals("Male", candidate.getGender());
		assertEquals("ADP01", candidate.getJobId());
		assertEquals("barenya", candidate.getLastName());
		assertEquals(9390999755l, candidate.getMobile());
		assertEquals(1000000l, candidate.getPay());
		assertEquals(OfferLetterStatus.GENERATED, candidate.getOfferLetterStatus());
		assertEquals("12gnfc", candidate.getSelectedTemplateId());
		assertEquals("some/path/to/letter", candidate.getGeneratedLetterDestination());
		assertEquals("Remark by HR", candidate.getRemarksByHR());
		assertEquals("Remark by Manager", candidate.getRemarksByManager());
	}

	@Test
	void testSetters() {
		candidate.setFirstName("sai");
		candidate.setCandidateId(3333l);
		candidate.setAssignedHRId("sda");
		candidate.setEmail("panda@adp.com");
		candidate.setGender("Female");
		candidate.setOfferLetterStatus(OfferLetterStatus.APPROVED);
		candidate.setJobId("sea");
		candidate.setLastName("charan");
		candidate.setMobile(9949591936l);
		candidate.setPay(300000l);
		candidate.setSelectedTemplateId("temp002");

		assertEquals("sai", candidate.getFirstName());
		assertEquals(3333l, candidate.getCandidateId());
		assertEquals("sda", candidate.getAssignedHRId());
		assertEquals("panda@adp.com", candidate.getEmail());
		assertEquals("Female", candidate.getGender());
		assertEquals(OfferLetterStatus.APPROVED, candidate.getOfferLetterStatus());
		assertEquals("sea", candidate.getJobId());
		assertEquals("charan", candidate.getLastName());
		assertEquals(9949591936l, candidate.getMobile());
		assertEquals(300000l, candidate.getPay());
		assertEquals("temp002", candidate.getSelectedTemplateId());
	}

	@Test
	void testToString() {
		String toTest = "Candidate(candidateId=12, firstName=panda, lastName=barenya, email=panda@gmail.com, pay=1000000, jobId=ADP01, gender=Male, mobile=9390999755, joiningDate=2023-09-25, assignedHRId=3gds, offerLetterStatus=GENERATED, selectedTemplateId=12gnfc, generatedLetterDestination=some/path/to/letter, remarksByHR=Remark by HR, remarksByManager=Remark by Manager)";
		assertEquals(toTest, candidate.toString());
	}
}
